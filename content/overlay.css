/* Translation overlay styles */
.translation-loading-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 999999;
  backdrop-filter: blur(2px);
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
}

.loading-content {
  background: white;
  padding: 32px;
  border-radius: 16px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 16px;
  max-width: 300px;
  text-align: center;
}

.loading-spinner {
  width: 40px;
  height: 40px;
  border: 3px solid #f3f3f3;
  border-top: 3px solid #277AD9;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

.loading-text {
  color: rgba(0, 0, 0, 0.8);
  font-size: 16px;
  font-weight: 500;
  line-height: 1.5;
}

/* Translated text highlighting */
.translated-text {
  position: relative;
  transition: all 0.3s ease;
}

.translated-text::before {
  content: '';
  position: absolute;
  top: 0;
  left: -2px;
  right: -2px;
  bottom: 0;
  background: linear-gradient(90deg, rgba(39, 122, 217, 0.1) 0%, rgba(39, 122, 217, 0.05) 100%);
  border-radius: 4px;
  opacity: 0;
  transition: opacity 0.3s ease;
  pointer-events: none;
  z-index: -1;
}

.translated-text:hover::before {
  opacity: 1;
}

/* Translation badge for hover states */
.translated-text:hover::after {
  content: 'Translated';
  position: absolute;
  top: -28px;
  left: 50%;
  transform: translateX(-50%);
  background: rgba(39, 122, 217, 0.9);
  color: white;
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 11px;
  font-weight: 500;
  white-space: nowrap;
  opacity: 0;
  animation: fadeInTooltip 0.2s ease forwards;
  z-index: 1000;
  pointer-events: none;
}

@keyframes fadeInTooltip {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(-4px);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0);
  }
}

/* Preserve layout during translation */
.translating * {
  transition: all 0.3s ease;
}

/* Handle different text elements */
.translated-text.title {
  border-left: 3px solid #277AD9;
  padding-left: 8px;
}

.translated-text.paragraph {
  border-radius: 6px;
  padding: 4px;
}

.translated-text.link {
  border-bottom: 1px solid rgba(39, 122, 217, 0.3);
}

/* Loading states for individual elements */
.element-translating {
  opacity: 0.6;
  position: relative;
}

.element-translating::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(39, 122, 217, 0.1), transparent);
  animation: shimmer 1.5s infinite;
}

@keyframes shimmer {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}

/* Error states */
.translation-error {
  background: rgba(255, 59, 48, 0.1) !important;
  border-left: 3px solid #ff3b30;
  padding-left: 8px !important;
}

.translation-error:hover::after {
  content: 'Translation failed';
  background: rgba(255, 59, 48, 0.9);
}

/* Toggle button for showing/hiding translations */
.translation-toggle {
  position: fixed;
  bottom: 20px;
  right: 20px;
  background: #277AD9;
  color: white;
  border: none;
  border-radius: 50px;
  padding: 12px 20px;
  font-family: 'Inter', sans-serif;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  box-shadow: 0 4px 12px rgba(39, 122, 217, 0.3);
  transition: all 0.3s ease;
  z-index: 999998;
  display: none;
}

.translation-toggle:hover {
  background: #1e6bc7;
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(39, 122, 217, 0.4);
}

.translation-toggle.show {
  display: block;
  animation: slideInUp 0.3s ease;
}

@keyframes slideInUp {
  from {
    transform: translateY(60px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .loading-content {
    margin: 20px;
    padding: 24px;
  }
  
  .loading-text {
    font-size: 14px;
  }
  
  .translation-toggle {
    bottom: 80px;
    right: 15px;
    padding: 10px 16px;
    font-size: 13px;
  }
  
  .translated-text:hover::after {
    display: none; /* Hide tooltips on mobile */
  }
}

/* High contrast mode support */
@media (prefers-contrast: high) {
  .translated-text::before {
    background: rgba(39, 122, 217, 0.2);
    border: 1px solid #277AD9;
  }
  
  .loading-content {
    border: 2px solid #277AD9;
  }
}

/* Reduced motion support */
@media (prefers-reduced-motion: reduce) {
  .translated-text,
  .translation-toggle,
  .loading-spinner,
  .element-translating::before {
    animation: none;
    transition: none;
  }
  
  .loading-spinner {
    border-top-color: transparent;
    border-right-color: #277AD9;
  }
}

/* Dark mode support */
@media (prefers-color-scheme: dark) {
  .loading-content {
    background: #1c1c1e;
    color: white;
  }
  
  .loading-text {
    color: rgba(255, 255, 255, 0.8);
  }
  
  .loading-spinner {
    border-color: #3c3c3e;
    border-top-color: #277AD9;
  }
  
  .translated-text:hover::after {
    background: rgba(39, 122, 217, 0.95);
  }
}

/* Print styles */
@media print {
  .translation-loading-overlay,
  .translation-toggle {
    display: none !important;
  }
  
  .translated-text::before,
  .translated-text::after {
    display: none !important;
  }
} 